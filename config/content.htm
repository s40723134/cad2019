<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>學習成果評量</h1>
<h2>W15</h2>
<p>影片</p>
<h2>W16</h2>
<p>影片</p>
<h2>W17</h2>
<h3>翻譯</h3>
<p>Webots用戶指南 教程2：修改環境</p>
<p>在本教程中，我們將教您如何在環境中創建簡單對象。 第一步將是創建一個與環境互動的球。 我們將處理與節點有關的幾個概念：它們的含義，如何創建它們，必須如何關聯它們等等。此外，我們還將了解如何設置物理學。</p>
<p>指數<br/>1.新的模擬<br/>2.修改地板<br/>3.實體節點<br/>4.創建一個球<br/>5.幾何形狀<br/>6.定義使用機制<br/>7.添加牆<br/>8.解決方案：世界文件<br/>9.效率<br/>10.結論</p>
<p><br/>1.新的模擬</p>
<p>首先，我們根據教程1中的模擬創建一個新的模擬。</p>
<p>操作1:<br/>確保打開了my_first_simulation.wbt world檔案，暫停模擬並且處於虛擬時間0。<br/>使用“文件/另存World檔案為...”，將模擬保存為obarriers.wbt。</p>
<p></p>
<p>2.修改地板</p>
<p>默認的RectangleArena PROTO定義了一個固定在靜態環境上的簡單地板，即沒有Physics節點並且被牆壁包圍。 Webots對像庫中提供了其他預建地板。 現在，我們將刪除RectangleArena節點，並添加一個簡單的地板，在本教程的後面部分將用牆手動將其包圍。</p>
<p>操作2:<br/>要刪除RectangleArena，請在3D視圖或場景樹狀圖中單擊鼠標左鍵將其選中，然後按鍵盤上的Delete鍵。 或者，可以在3D視圖中右鍵單擊它，然後在上下文菜單中選擇“刪除”（也可以直接在場景樹視圖中使用上下文菜單）。 選擇TexturedBackroundLight節點，然後單擊“添加”按鈕。 在打開的對話框中，然後選擇PROTO節點（Webots Projects）/對象/ Floors / Floor（Solid）。</p>
<p>新添加的Floor PROTO的默認大小為10m x10m，但是可以通過更改相應的字段來調整其大小，位置和紋理</p>
<p>操作3:<br/>在場景樹狀圖中，選擇並展開“地板”。 修改大小字段並將其設置為{1，1}以將其大小調整為1m x1m。</p>
<p></p>
<p>3.實體節點</p>
<p>本小節介紹了Webots中最重要的基礎節點：Solid節點，許多其他節點都來自Solid節點。<br/>甲固體節點代表一個剛體，即在其中變形可以忽略不計的主體。剛體上任意兩個給定點之間的距離在時間上保持恆定，而不管施加在其上的外力如何。例如，桌子，機械手指骨或輪子是剛體。軟體和關節物體不是剛體。例如，繩索，輪胎，海綿或關節式機械臂不是剛性體。但是，可以將一個鉸接的實體分解為幾個剛體。</p>
<p>要定義剛體，您將必須創建一個實體節點。在此節點內，您將根據剛體的特性設置不同的子節點。下圖描繪了剛體及其子節點。實體節點的圖形表示由填充其列表的Shape節點定義children。碰撞範圍在其boundingObject字段中定義。圖形表示和碰撞形狀通常但不一定相同。最後，該physics字段定義對像是屬於動態環境還是屬於靜態環境。所有這些子節點都是可選的，但是physics需要boundingObject定義該字段。</p>
<p><img alt="" height="182" src="/images/未命名.png" width="217"/><br/>Webots中剛體的最簡單模型，具有圖形表示，物理邊界對象並且處於動態環境中。</p>
<p>幾何框（在此圖中）代表任何種類的幾何圖元。實際上，它可以用Sphere，Box，Cylinder等代替。</p>
<p></p>
<p>4.創建一個球</p>
<p>現在，我們將球添加到模擬中。如原本那個球將被建模為剛性體圖。一球節點將被用來定義我們的球的幾何形狀。</p>
<p>操作4:<br/>在場景樹狀圖中，選擇最後一個節點，然後按Add按鈕。在對話框中，打開該Bases nodes部分，然後選擇“ 實體”節點。在場景樹視圖中，展開“ 實體”節點並選擇其children字段。使用按鈕向其添加一個Shape節點Add。選擇“ 形狀”節點的appearance字段，然後使用按鈕添加一個節點。AddPBRAppearance</p>
<p>1.將球體節點添加為geometry新創建的形狀節點的字段。<br/>2.展開PBRAppearance節點並將其metalness字段更改為0，並將其roughness字段更改為1。<br/>3.將另一個Sphere節點添加到Solid的boundingObject字段。<br/>4.最後，將一個Physics節點添加到Solid的physics字段中。<br/>5.通過修改實體節點的translation字段，將球放在機器人的前面（例如）。{0, 0.2, -0.2}<br/>6.保存模擬。<br/>7.結果如圖所示。</p>
<p><img alt="" height="173" src="/images/未命名2.png" width="305"/><br/>Webots中的第一個剛體。</p>
<p>當模擬開始時，球擊中地板。您可以通過向球施加力來移動球（Ctrl + Alt +左鍵單擊+拖動）。通過啟用View / Optional Rendering / Show Contact Points菜單項，可以將球和地板之間的接觸點顯示為青色線。</p>
<p></p>
<p>5.幾何形狀</p>
<p>為了定義球，我們在兩個不同的上下文中使用了Sphere節點：用於圖形表示（children）和定義物理邊界（boundingObject）。所有Geometry節點（例如Sphere節點）都可以在圖形上下文中使用。但是，它們的子集只能在物理環境中使用。的節點圖表圖表示哪些節點在每個上下文都支持。</p>
<p>現在，我們將通過增加用於表示球體的三角形的數量來減小球體的大小並提高其圖形質量。</p>
<p>操作5:<br/>對於每一個球體限定球節點，其設置radius於場0.05和它的subdivision字段2</p>
<p></p>
<p>6.定義使用機制</p>
<p>該DEF-USE機制允許在一個地方定義一個節點，並在場景樹在其他地方重複使用的定義。這對於避免在世界文件中復制相同節點很有用。此外，它還允許用戶同時修改多個對象。它是這樣工作的：首先用DEF字符串標記節點。然後，可以使用USE關鍵字將該節點的副本重用於其他地方。只能編輯DEF節點的字段，USE的字段從DEF節點繼承，並且不能更改。該機制取決於world文件中節點的順序。應在任何相應的USE節點之前定義DEF節點。</p>
<p>我們之前用來定義球的兩個Sphere定義是多餘的。現在，我們將使用DEF-USE機制將這兩個Sphere合併為一次。</p>
<p>操作6:<br/>在場景樹視圖中選擇第一個Sphere節點（Shape的子級）。場景樹視圖的字段編輯器允許您輸入DEF字符串。</p>
<p>1.BALL_GEOMETRY在此字段中輸入。<br/>2.選擇boundingObject字段（包含第二個Sphere節點），然後通過右鍵單擊場景樹中的字段並Delete在彈出的上下文菜單中選擇條目來將其清空。<br/>3.然後，選擇boundingObject字段並單擊Add按鈕，然後USE / BALL_GEOMETRY在對話框中選擇。<br/>4.結果如圖所示。</p>
<p>現在，更改radius第一個Sphere節點的字段也會修改其boundingObject。</p>
<p>為方便起見，該boundingObject字段還接受Shape節點（而不是直接接受Sphere節點）。也可以在Shape級別使用相同的DEF-USE機制，如圖所示。到目前為止，最大的好處就是也可以直接將此Shape用於圖形目的。後來，對於某些傳感器，該機制將變得非常有用。</p>
<p><img alt="" height="179" src="/images/1.jpg" width="312"/></p>
<p>Sphere節點上的DEF-USE機制稱為BALL_GEOMETRY。</p>
<p><img alt="" height="215" src="/images/2.jpg" width="306"/></p>
<p>在實體的“形狀”節點上應用的DEF-USE機制。</p>
<p>操作7:<br/>創建第二個球，使用相同的參數，但使用 Shape節點（而不是直接使用Sphere節點）作為DEF-USE機制。</p>
<p></p>
<p>7.添加牆</p>
<p>為了驗證您的進度，請自己實施四堵牆以包圍環境。必鬚根據環境靜態定義牆壁。要了解靜態和動態之間的區別，我們將定義的物體（球）放在地面上方。如果“ 物理”節點為NULL，則在仿真過程中它將保持凍結狀態（靜態情況）。如果該physics字段包含“ 物理”節點，則它將屬於重力作用（動態情況）。</p>
<p>在Shape級別而不是Geometry級別，盡可能使用DEF-USE機制。實際上，在實體節點的字段中添加中間Shape節點更為方便。實現牆的最佳幾何原語是Box節點。所有牆壁僅需定義一個形狀。預期結果如圖所示。boundingObject</p>
<p>操作8:<br/>添加四面牆，而不添加物理場，並且僅使用Shape節點的一個定義。</p>
<p></p>
<p>8.解決方案：<span>worlds</span>文件</p>
<p>要將您的世界與解決方案進行比較，請轉到文件，找到在教程1中創建的名為“ my_first_simulation”的文件夾，然後轉到“ worlds”文件夾並使用文本編輯器打開正確的世界。 與其他解決方案一樣，該解決方案位於solution目錄中。</p>
<p><img alt="" height="168" src="/images/3.jpg" width="296"/></p>
<p>在第二篇教程結尾處的仿真狀態。</p>
<p></p>
<p>9.效率</p>
<p>剛體的模擬在計算上是昂貴的。可以通過最小化邊界對象的數量，最小化邊界對象之間的約束（在下一個教程中有關約束的更多信息）以及最大化WorldInfo.basicTimeStep字段來提高仿真速度。在每個模擬中，必須在模擬速度和真實性之間找到一個折衷。</p>
<p></p>
<p>10.結論</p>
<p>在本教程的最後，您將能夠基於剛體創建簡單的環境。您可以從場景樹視圖添加節點並修改其字段。您已經熟悉了Solid，Physics，Shape，Sphere和Box節點。您還看到了DEF-USE機制，該機制可減少場景樹的節點冗餘。</p>
<h3>影片</h3>
<h2>w18</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/iKQstKXeKYc" width="560"></iframe></p>
<p>個人簡報:<a href="https://s40723134.github.io/cad2019/reveal/index.html#/">https://s40723134.github.io/cad2019/reveal/index.html#/</a></p>
<p></p>